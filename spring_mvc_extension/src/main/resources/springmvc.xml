<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!-- 自动扫描包 -->
    <context:component-scan base-package="com.atguigu"/>
    <!-- 配置Thymeleaf视图解析器 -->
    <bean id="viewResolver"
          class="org.thymeleaf.spring5.view.ThymeleafViewResolver">
        <property name="order" value="1"/>
        <property name="characterEncoding" value="UTF-8"/>
        <property name="templateEngine">
            <bean class="org.thymeleaf.spring5.SpringTemplateEngine">
                <property name="templateResolver">
                    <bean
                            class="org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver">
                        <!-- 视图前缀 -->
                        <property name="prefix" value="/WEB-INF/templates/"/>
                        <!-- 视图后缀 -->
                        <property name="suffix" value=".html"/>
                        <property name="templateMode" value="HTML5"/>
                        <property name="characterEncoding" value="UTF-8" />
                    </bean>
                </property>
            </bean>
        </property>
    </bean>

    <!--
        配置默认的servlet处理静态资源
        当前工程的web.xml配置的前端控DispatcherServlet的url - pattern是/
        tomcat的web.xml配置的DefaultServlet的url-pattern也是/
        此时，浏时器发送的请求会优先DispatcherServlet进行处理，但是DispatcherServlet无法处理静态资源
        若配置了<mvc:default-servlet-handler />,此时浏览器发送的所有请求都会越DispatcherServlet处理
        若配置了<mvc:default-servlet-handler />和<mvc:annotation-driven />
        浏览器发送的请求会先被DispatcherServlet.处理，无法处理在交给DefaultServlet处理
    -->
<!--    <mvc:default-servlet-handler></mvc:default-servlet-handler>-->
    <mvc:default-servlet-handler />

    <mvc:annotation-driven />
    <!--
        path：设置处理的请求地址
        view-name：设置请求地址所对应的视图名称
    -->
    <mvc:view-controller path="/" view-name="index"></mvc:view-controller>

    <!--必须通过文件解析器的解析才能将文件转换为MultipartFile对象-->
    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
    </bean>

<!--    <mvc:interceptors>-->
<!--&lt;!&ndash;        <bean class="com.atguigu.interceptor.FirstInterceptor"></bean>&ndash;&gt;-->
<!--        <ref bean="firstInterceptor"></ref>-->
<!--        <ref bean="secondInterceptor"></ref>-->
<!--        &lt;!&ndash; 以上两种配置方式都是对DispatcherServlet所处理的所有的请求进行拦截 &ndash;&gt;-->
<!--&lt;!&ndash;        <mvc:interceptor>&ndash;&gt;-->
<!--&lt;!&ndash;            <mvc:mapping path="/**"/>&ndash;&gt;-->
<!--&lt;!&ndash;            <mvc:exclude-mapping path="/abc"/>&ndash;&gt;-->
<!--&lt;!&ndash;            <ref bean="firstInterceptor"></ref>&ndash;&gt;-->
<!--&lt;!&ndash;        </mvc:interceptor>&ndash;&gt;-->
<!--        &lt;!&ndash;-->
<!--        以上配置方式可以通过ref或bean标签设置拦截器，通过mvc:mapping设置需要拦截的请求，通过-->
<!--        mvc:exclude-mapping设置需要排除的请求，即不需要拦截的请求-->
<!--        &ndash;&gt;-->
<!--    </mvc:interceptors>-->


<!--    <bean-->
<!--            class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">-->
<!--        <property name="exceptionMappings">-->
<!--            <props>-->
<!--                &lt;!&ndash;-->
<!--                properties的键表示处理器方法执行过程中出现的异常-->
<!--                properties的值表示若出现指定异常时，设置一个新的视图名称，跳转到指定页面-->
<!--                &ndash;&gt;-->
<!--                <prop key="java.lang.ArithmeticException">error</prop>-->
<!--            </props>-->
<!--        </property>-->
<!--        &lt;!&ndash;-->
<!--        exceptionAttribute属性设置一个属性名，将出现的异常信息在请求域中进行共享-->
<!--        &ndash;&gt;-->
<!--        <property name="exceptionAttribute" value="ex"></property>-->
<!--    </bean>-->



</beans>